[{"authors":["xiaoou"],"categories":null,"content":"Thème\nSur fond de tension entre la Chine et les Etats-Unis, nous nous sommes penchés sur la représentation de la guerre commerciale sur la toile des pays anglophones, de la Chine, et de la France.\nMotivation\nLa guerre commerciale est susceptible de causer une récession générale. Les Etats-Unis semblent considérer que la montée de la Chine menace déjà son hégémonie, alors que la Chine, aspirant à des progrès économiques toujours plus importants, prennent la défense de ses propres intérêts.\nExclusivités\n Syntaxe highlighting  Tous les codes sont colorés pour faciliter la lecture, que cela soit Python, Javascript, Perl ou Shell (bash).\n Recherche productible  Nos codes sont écrits dans des fichiers .Rmd. Il suffit de les ouvrir dans Rstudio pour les exécuter et voir ainsi les résultats.\n Git  L\u0026rsquo;historique de notre projet est intégralement conservée et documentée grâce à Git, logiciel de gestion de versions décentralisé. Les codes Rmarkdown se trouvent ici et les codes du site ici.\n Responsive Design  Notre site s\u0026rsquo;adapte automatiquement à différentes tailles d\u0026rsquo;écran.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"51b9199d1441fa523628dd4669da1c42","permalink":"/authors/xiaoou/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/xiaoou/","section":"authors","summary":"Thème\nSur fond de tension entre la Chine et les Etats-Unis, nous nous sommes penchés sur la représentation de la guerre commerciale sur la toile des pays anglophones, de la Chine, et de la France.\nMotivation\nLa guerre commerciale est susceptible de causer une récession générale. Les Etats-Unis semblent considérer que la montée de la Chine menace déjà son hégémonie, alors que la Chine, aspirant à des progrès économiques toujours plus importants, prennent la défense de ses propres intérêts.","tags":null,"title":"ô la guerre, quand tu nous tiens !","type":"authors"},{"authors":null,"categories":null,"content":" 2019-12-21-Sat 大概搞懂了这个theme的用法\n 其实就是要搞懂hugo，尤其是menu的系统 暂时就用Rmarkdown做后缀名  todo  看一下怎么加static file的链接  ","date":1576882800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1576882800,"objectID":"585b2a9474d852dacad2c0876c3fb0bc","permalink":"/frontend/","publishdate":"2019-12-21T00:00:00+01:00","relpermalink":"/frontend/","section":"frontend","summary":" 2019-12-21-Sat 大概搞懂了这个theme的用法\n 其实就是要搞懂hugo，尤其是menu的系统 暂时就用Rmarkdown做后缀名  todo  看一下怎么加static file的链接  ","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" Navigation A gauche vous trouvez la liste des billets écrits après chaque cours\nA droite vous avez accès au sommaire de chaque billet.\nPour vous faciliter la navigation, nous avons également mis à disposition la liste des billets sur cette page.\nListe des billets  cours 2 - Préambule Unix I cours 3 - Préambule Unix II cours 4 - Préparation du projet cours 6 - Détection de l’encodage d’URL cours 7 - Rajouter 4 colonnes dans la table d\u0026rsquo;URLs cours 8 - Résolution du problème d\u0026rsquo;encodage cours 9 - deuxième méthode pour la segmentation du corpus chinois cours 10 - Reconstruction du code (Refactoring) cours 11 - Analyse du corpus sur iTrameur  ","date":1546642800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1546642800,"objectID":"b0d8ccffb8d530bff08365a148a04ee6","permalink":"/blog/","publishdate":"2019-01-05T00:00:00+01:00","relpermalink":"/blog/","section":"blog","summary":" Navigation A gauche vous trouvez la liste des billets écrits après chaque cours\nA droite vous avez accès au sommaire de chaque billet.\nPour vous faciliter la navigation, nous avons également mis à disposition la liste des billets sur cette page.\nListe des billets  cours 2 - Préambule Unix I cours 3 - Préambule Unix II cours 4 - Préparation du projet cours 6 - Détection de l’encodage d’URL cours 7 - Rajouter 4 colonnes dans la table d\u0026rsquo;URLs cours 8 - Résolution du problème d\u0026rsquo;encodage cours 9 - deuxième méthode pour la segmentation du corpus chinois cours 10 - Reconstruction du code (Refactoring) cours 11 - Analyse du corpus sur iTrameur  ","tags":null,"title":"Mode d'emploi","type":"docs"},{"authors":null,"categories":null,"content":"Système de fichiers\nSous windows, il y a plusieurs arborescences tandis que sous unix, on a qu’une arborescence. pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.txt cat test.txt # visualiser le contenu d'un fichier echo \u0026quot;# montrer les metadonnes du contenu\u0026quot; wc test.txt # la commande egale wc -mlw, m = caractere l = ligne, w = mots  /Users/becca/Downloads/siteProjetEncadre/content/blog # exemple de l'arborescence de la racine sous Mac Applications Developer Incompatible Software Library Network System Users Volumes anaconda3 bin cores dev etc home installer.failurerequests net opt private sbin tmp usr var # sortie de la commande cat Bonjour # montrer les metadonnes du contenu 1 1 8 test.txt  ","date":1569967200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569967200,"objectID":"6e16f9795c5b0f83798e56ef0528f59c","permalink":"/blog/1/","publishdate":"2019-10-02T00:00:00+02:00","relpermalink":"/blog/1/","section":"blog","summary":"Système de fichiers\nSous windows, il y a plusieurs arborescences tandis que sous unix, on a qu’une arborescence. pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.","tags":null,"title":"Cours 2 - Préambule Unix I","type":"docs"},{"authors":null,"categories":null,"content":" table example pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.txt cat test.txt # visualiser le contenu d'un fichier echo \u0026quot;# montrer les metadonnes du contenu\u0026quot; wc test.txt # la commande egale wc -mlw, m = caractere l = ligne, w = mots  /Users/becca/Downloads/siteProjetEncadre/content/frontend # exemple de l'arborescence de la racine sous Mac Applications Developer Incompatible Software Library Network System Users Volumes anaconda3 bin cores dev etc home installer.failurerequests net opt private sbin tmp usr var # sortie de la commande cat Bonjour # montrer les metadonnes du contenu 1 1 8 test.txt     Syntax Description     Header Title   Paragraph Text    R You can embed an R code chunk like this:\nsummary(cars)   speed dist Min. : 4.0 Min. : 2.00 1st Qu.:12.0 1st Qu.: 26.00 Median :15.0 Median : 36.00 Mean :15.4 Mean : 42.98 3rd Qu.:19.0 3rd Qu.: 56.00 Max. :25.0 Max. :120.00  fit \u0026lt;- lm(dist ~ speed, data = cars) fit   Call: lm(formula = dist ~ speed, data = cars) Coefficients: (Intercept) speed -17.579 3.932  par(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'), col = c('#0292D8', '#F7EA39', '#C4B632'), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.\n ","date":1576882800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576882800,"objectID":"c273171e80353d7fc85d99b0a051b7a0","permalink":"/frontend/2/","publishdate":"2019-12-21T00:00:00+01:00","relpermalink":"/frontend/2/","section":"frontend","summary":"table example pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.txt cat test.txt # visualiser le contenu d'un fichier echo \u0026quot;# montrer les metadonnes du contenu\u0026quot; wc test.","tags":null,"title":"second","type":"docs"},{"authors":null,"categories":null,"content":"1. Flux d\u0026rsquo;entrée \u0026amp; de sortie \u0026amp; d\u0026rsquo;erreur\n# flux d’erreur standard \u0026quot;\u0026gt;\u0026gt;\u0026quot; (sortie normal) vs. 2\u0026gt; (canal d’erreur) cd ~ lsd \u0026gt; sortie.txt 2\u0026gt; erreur.txt # exercice : transformer tous les n en N d'un fichier et l'enregistrer dans un autre fichier tr \u0026quot;n\u0026quot; \u0026quot;N\u0026quot; \u0026lt; test.txt \u0026gt; testN.txt cat testN.txt # Exercice : majusculiser les données tr \u0026quot;[[:lower:]]\u0026quot; \u0026quot;[[:upper:]]\u0026quot; \u0026lt; test.txt  BoNjour BONJOUR  2. Redirection du flux d’information Récupérer l’output de la première commande et le réenvoyer à la deuxième commande - symbole clé : pipe |\n# transformer \u0026quot;é\u0026quot; en \u0026quot;E\u0026quot; puis majusculiser l'output de la première commande cd ~ tr \u0026quot;é\u0026quot; \u0026quot;E\u0026quot; \u0026lt; test.txt | tr \u0026quot;[[:lower:]]\u0026quot; \u0026quot;[[:upper:]]\u0026quot; # trier par le premier champ - sort ; filtrage de doublons - uniq egrep -o \u0026quot;\\w+\u0026quot; test.txt | sort | uniq -c  BONJOUR 1 Bonjour  3. Sectionner les données par champ (un champ est defini par un symbole qui delimite ce champ particulier)\n# couper les données en 2 champs par le délimiteur \u0026quot;=\u0026quot; cd ~ echo \u0026quot;la somme de 2+2=4\u0026quot; \u0026gt; test2.txt cut -f2 -d\u0026quot;=\u0026quot; test2.txt # utiliser read pour capturer la saisie de l'utilisateur et la stocker dans une variable echo \u0026quot;nom ?\u0026quot; ; # read nom; echo \u0026quot;bonjour $nom\u0026quot;  4 nom ? bonjour  nom ?\nwang\nbonjour wang\n","date":1569967200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569967200,"objectID":"23189ba8a1714c94f6dfaf5b36cdaffa","permalink":"/blog/2/","publishdate":"2019-10-02T00:00:00+02:00","relpermalink":"/blog/2/","section":"blog","summary":"1. Flux d\u0026rsquo;entrée \u0026amp; de sortie \u0026amp; d\u0026rsquo;erreur\n# flux d’erreur standard \u0026quot;\u0026gt;\u0026gt;\u0026quot; (sortie normal) vs. 2\u0026gt; (canal d’erreur) cd ~ lsd \u0026gt; sortie.txt 2\u0026gt; erreur.txt # exercice : transformer tous les n en N d'un fichier et l'enregistrer dans un autre fichier tr \u0026quot;n\u0026quot; \u0026quot;N\u0026quot; \u0026lt; test.txt \u0026gt; testN.txt cat testN.txt # Exercice : majusculiser les données tr \u0026quot;[[:lower:]]\u0026quot; \u0026quot;[[:upper:]]\u0026quot; \u0026lt; test.txt  BoNjour BONJOUR  2. Redirection du flux d’information Récupérer l’output de la première commande et le réenvoyer à la deuxième commande - symbole clé : pipe |","tags":null,"title":"Cours 3 - Préambule Unix II","type":"docs"},{"authors":null,"categories":null,"content":"Configuration du terrain   Nous avons créé l\u0026rsquo;arborescence de travail à l\u0026rsquo;aide du script bash suivant nommé \u0026lsquo;prepare-environnement-projet.sh\u0026rsquo;\n#!/bin/bash mkdir PROJET_MOT_SUR_LE_WEB cd PROJET_MOT_SUR_LE_WEB # on peut desormais creer l'arborescence de travail mkdir ./CONTEXTES; mkdir ./DUMP_TEXT; mkdir ./IMAGES; mkdir ./PAGES_ASPIREES; mkdir ./PROGRAMMES; mkdir ./TABLEAUX; mkdir ./URLS; # les lignes precedentes peuvent tenir sur une seule ligne # a savoir mkdir ./CONTEXTES ./DUMP_TEXT etc.... # le dossier URLS contiendra le fichier initial d'URLs  Il suffit de nous positionner dans le même répertoire que ce script et l\u0026rsquo;exécuter avec bash\nbash prepare-environnement-projet.sh   Etape 1 : lire les fichiers URL et écrire leurs contenus ligne par ligne dans un nouveau fichier J\u0026rsquo;ai une remarque sur la manière dont on utilise pour récupérer tous les fichiers dans un répertoire. J\u0026rsquo;ai utilisé /chemin/* au lieu de $(ls /chemin) car ce dernier m\u0026rsquo;apparaît un peu lourd mais je vois pas leur différence au niveau de sortie\n# !/bin/bash # on commence par effacer l'éventuel contenu de ficher que l'on doit réécrire echo \u0026quot;\u0026quot; \u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # on récupère les 2 arguments que l'on a passé au programme # le premier : chemin vers le dossier contenant les fichiers d'URL # le second : chemin vers le dossier devant contenir le fichier HTML final echo \u0026quot;les urls sont dans : $1\u0026quot;; echo \u0026quot;chemin de stockage : $2\u0026quot;; # pour tous les fichiers dans le répertoire 1 for fichier in $1/* # on exécute les commandes suivantes do # compteur destiné à compter les URLs pour chaque fichier d'URL compteur=1; echo \u0026quot;$fichier\u0026quot;; for ligne in $(cat \u0026quot;$fichier\u0026quot;) do echo \u0026quot;$compteur : $ligne\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # on incrémente le compteur des URLs compteur=$((compteur+1)) done done  ","date":1570572000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1570572000,"objectID":"f330f6efe29e9f6d880fd39a21d463e9","permalink":"/blog/3/","publishdate":"2019-10-09T00:00:00+02:00","relpermalink":"/blog/3/","section":"blog","summary":"Configuration du terrain   Nous avons créé l\u0026rsquo;arborescence de travail à l\u0026rsquo;aide du script bash suivant nommé \u0026lsquo;prepare-environnement-projet.sh\u0026rsquo;\n#!/bin/bash mkdir PROJET_MOT_SUR_LE_WEB cd PROJET_MOT_SUR_LE_WEB # on peut desormais creer l'arborescence de travail mkdir ./CONTEXTES; mkdir ./DUMP_TEXT; mkdir ./IMAGES; mkdir ./PAGES_ASPIREES; mkdir ./PROGRAMMES; mkdir ./TABLEAUX; mkdir ./URLS; # les lignes precedentes peuvent tenir sur une seule ligne # a savoir mkdir ./CONTEXTES ./DUMP_TEXT etc.... # le dossier URLS contiendra le fichier initial d'URLs  Il suffit de nous positionner dans le même répertoire que ce script et l\u0026rsquo;exécuter avec bash","tags":null,"title":"Cours 4 - Préparation du projet","type":"docs"},{"authors":null,"categories":null,"content":"Pour conclure ce que nous avons fait les trois dernières séances :  Nous avons établi d’abord des tables de base contenant des URLs. Ce qui est réalisé à l’aide de deux boucles for, une pour parcourir tous nos fichiers d’URLs et construire une table pour chaque fichier, soit chaque langue ainsi que la deuxième servant à lire les URLs et les écrire dans nos tables ligne à ligne. Nous avons appris que le shell utilise des variables d’environnement dont l’on peut faire apparaître le contenu avec le signe dollars “$”. En utilisant ce signe, nous pouvons stocker et réutiliser le numéro de ligne et le contenu de ligne.\n Ayant pour but de scrap le contenu de page web et faire éventuellement des analyses textuelles au-dessus, nous avons utiliser les commandes curl et lynx. Deux nouvelles colonnes ont été rajoutées pour les liens locaux de fichier html et txt dirigés vers le contenu sans format et celui de texte brut de page web.\n Or, ce processus de scrap n’est pas si facile à cause des problèmes d’URLs ou de l’encodage. Nous avons ainsi détecté si le code d’état de page web est 200 qui veut dire le succès de la requête et si l’encodage est UTF-8. Le résultat de ces vérification décide nos prochains processus. Ces deux information ont également été rajoutées dans nos tables.   \nProblèmes rencontrés Je n’ai pas pris conscience de l’influence d’espace dans le script bash jusqu’au moment de l’apparition des informations d’erreurs suivantes :\n[200: command not found # ou [405: command not found  [200==200]: command not found  La première erreur provient de\nif [ $coderetour == 200 ]  J\u0026rsquo;ai utilisé simples crochets et mis des espaces ente $coderetour et 200. Tandis que la deuxième est à cause de\nif [$coderetour==200]  ce qui n\u0026rsquo;obéit pas à la syntaxe du bash que la condition est toujours entourée d’un espace après le crochet d’ouverture et avant le crochet de fermeture. J\u0026rsquo;ai aussi essayé de comprendre la différence entre simples et doubles crochets et j\u0026rsquo;ai trouvé une réponse raisonnable Les conditions à doubles crochets permettent tout ce qu’offrent les conditions à simples crochets et plus, par exemple, elles proposent l’usage du wildcard comme en bash ainsi que des expressions régulières.\nVoici la dernière version de script accompagné des explications de certaines commandes bash dans les commentaire.\n# !/bin/bash # on commence par effacer l'éventuel contenu de ficher que l'on doit réécrire echo \u0026quot;\u0026quot; \u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # ou # rm -f \u0026quot;$2/tableau.html\u0026quot; ; # on récupère les 2 arguments que l'on a passé au programme # le premier : chemin vers le dossier contenant les fichiers d'URL # le second : chemin vers le dossier devant contenir le fichier HTML final echo \u0026quot;les urls sont dans : $1\u0026quot;; echo \u0026quot;chemin de stockage : $2\u0026quot;; # 1. définir le type \u0026lt;html\u0026gt; echo \u0026quot;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;meta charset=\\\u0026quot;UTF-8\\\u0026quot;\u0026gt;\u0026lt;title\u0026gt;Tableaux\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # 2. générer un tableau par fichier d'URL numeroTable=1; # pour tous les fichiers dans le répertoire 1 # for fichier in $1/* for fichier in $(ls $1) # on exécute les commandes suivantes do # compteur destiné à compter les URLs pour chaque fichier d'URL compteur=1; echo \u0026quot;$1/$fichier\u0026quot;; echo \u0026quot;\u0026lt;table border=\\\u0026quot;2\\\u0026quot; align=\\\u0026quot;center\\\u0026quot; width=\\\u0026quot;80%\\\u0026quot;\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # lecture ligne à ligne des URLs for ligne in $(cat \u0026quot;$1/$fichier\u0026quot;) do # curl ： un outil de transfert de data de ou vers un serveur # options : # -o output file # -s silent, use -S, --show-error in addition to this option to disable progress meter but still show error messages # -I head, fetch the headers only # -L location, if the server reports that the requested page has moved to a different location, this option will make curl redo the request on the new place. # -w write-out, Make curl display information on stdout after a completed transfer coderetour=$(curl -SIL -o tmp.txt -w %{http_code} $ligne); # si coderetour est egale a 200 if [[ $coderetour == 200 ]] then # normaliser la case, tout est en majuscule, comme UTF-8 # supprimer eventuellement la fin de ligne encodage=$(curl -sIL -o toto -w %{content_type} $ligne|cut -f2 -d\u0026quot;=\u0026quot;|tr '[a-z]' '[A-Z]'|tr -d '\\n'); # quand on ouvre un fichier, le reprtoire sera le sien # pour relier $numeroTable et $compteur, '-' marche mais pas '_'????? curl -L -o \u0026quot;../PAGES-ASPIREES/$numeroTable-$compteur.html\u0026quot; \u0026quot;$ligne\u0026quot;; if [[ $encodage == 'UTF-8' ]] then lynx -dump -nolist -assume-charset=$encodage - display-charset=$encodage \u0026quot;../PAGE_ASPIREES/$numeroTable-$compteur.html\u0026quot; \u0026gt; ../DUMP-TEXT/$numeroTable-$compteur.txt; echo \u0026quot;\u0026lt;tr\u0026gt;\u0026lt;td\u0026gt;$compteur\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;$ligne\\\u0026quot; target=\\\u0026quot;_blank\\\u0026quot;\u0026gt;$ligne\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Code_http:$coderetour\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Encodage:$encodage\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../PAGE-ASPIREES/$numeroTable-$compteur.html\\\u0026quot;\u0026gt;$numeroTable-$compteur.html\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../DUMP-TEXT/$numeroTable-$compteur.txt\\\u0026quot;\u0026gt;$numeroTable-$compteur.txt\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; else # comment savoir si la valeur est connu de iconv # extraction de l'encodage avec egrep dans la page aspiree # lynx dump avec l'encodage trouve # convertir le dump en utf8 avec iconv echo \u0026quot;\u0026lt;tr\u0026gt;\u0026lt;td\u0026gt;$compteur\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;$ligne\\\u0026quot; target=\\\u0026quot;_blank\\\u0026quot;\u0026gt;$ligne\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Code_http:$coderetour\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Encodage:$encodage\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../PAGE_ASPIREES/$numeroTable-$compteur.html\\\u0026quot;\u0026gt;\u0026quot;$numeroTable-$compteur.html\u0026quot;\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; fi else echo \u0026quot;\u0026lt;tr\u0026gt;\u0026lt;td\u0026gt;$compteur\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;$ligne\\\u0026quot; target=\\\u0026quot;_blank\\\u0026quot;\u0026gt;$ligne\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Code_http:$coderetour\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; fi compteur=$((compteur+1)); done echo \u0026quot;\u0026lt;/table\u0026gt;\u0026lt;br /\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;; # cat $fichier \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot; numeroTable=$((numeroTable+1)); done echo \u0026quot;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$2/tableau.html\u0026quot;;  ","date":1571781600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571781600,"objectID":"d25ee74feef451d187a06b12d7e25e7e","permalink":"/blog/4/","publishdate":"2019-10-23T00:00:00+02:00","relpermalink":"/blog/4/","section":"blog","summary":"Pour conclure ce que nous avons fait les trois dernières séances :  Nous avons établi d’abord des tables de base contenant des URLs. Ce qui est réalisé à l’aide de deux boucles for, une pour parcourir tous nos fichiers d’URLs et construire une table pour chaque fichier, soit chaque langue ainsi que la deuxième servant à lire les URLs et les écrire dans nos tables ligne à ligne. Nous avons appris que le shell utilise des variables d’environnement dont l’on peut faire apparaître le contenu avec le signe dollars “$”.","tags":null,"title":"Cours 6 - Détection de l’encodage d’URL","type":"docs"},{"authors":null,"categories":null,"content":"Désormais, au moment de lancement de notre programme, nous devons mettre 3 arguments. Le premier et le deuxième sont respectivement le répertoire de l\u0026rsquo;input URL et celui de l\u0026rsquo;output tableau. Maintenant, le troisième est nos mots ciblés dans ce projet qui est donc \u0026lsquo;guerre commerciale|trade war|贸易战\u0026rsquo; pour nous. Ce troisième argument sert à compter sa fréquence dans le texte.\n\nLes 4 colonnes rajoutées sont :\n le contexte de mot-clé sa fréquence dans chaque fichier dump l\u0026rsquo;index des mots présents dans chaque fichier dump les bigrammes  \nMinigrep ou egrep\nAprès avoir intallé Perl, nous avons deux façons de trouver le contexte des mots ciblés, soit deux lignes autour de la ligne concernant les mots-clés, une avec egrep et une autre avec minigrep # ----06/11 # METHODE 1 : trouver la ligne avant et la ligne après de la ligne contenant notre mot-clé avec egrep # egrep -i -C 2 $motif '../DUMP-TEXT/$numerotableau-$compteur.txt' \u0026gt; '../CONTEXTES/$numerotableau-$compteur.txt'; # METHODE 2 : en utilisant minigrep # mettre les motifs dans le fichier parametre-motif.txt minigrep/minigrepmultilingue.pl \u0026quot;UTF-8\u0026quot; '../DUMP-TEXT/$numerotableau-$compteur.txt' minigrep/parametre-motif.txt; # renommer le fichier obtenu mv resultat-extraction.html ../CONTEXTES/$numerotableau-$compteur.html  Afin d\u0026rsquo;obtenir des bigrammes, nous avons concaténé tous les mots d\u0026rsquo;un fichier avec tous les mots de ce fichier sauf le premier en utilisant paste. Cependant, la manière dont on utilise pour récupérer des mots ne s\u0026rsquo;applique pas au chinois à cause du fait que le chinois n\u0026rsquo;utilise pas des délimiteurs pour distinguer des mots. Il nous faut donc trouver un autre outil pour la segmentation du corpus chinois.  # \\w+ ne marche que dans UTF-8 # INDEX DES MOTS egrep -o '\\w+' '../DUMP-TEXT/$numerotableau-$compteur.txt' | sort | uniq -c|sort -gr \u0026gt; '../DUMP-TEXT/index-$numerotableau-$compteur.txt'; ## BIGRAMS egrep -o '\\w+' '../DUMP-TEXT/$numerotableau-$compteur.txt' \u0026gt;fic1; tail -n +2 fich1 \u0026gt;fic2; paste fic1 fic2 | sort | uniq -c | sort -gr \u0026gt; '../DUMP-TEXT/bigrams-$numerotableau-$compteur.txt' ## COMPTER LE MOTIF frqMotif=$(egrep -oc $motif '../DUMP-TEXT/$numerotableau-$compteur.txt');  \nStanford Chinese Segmenter\nGrâce aux blogs de nos anciens camarades, nous avons connu un outil de segmentation du chinois à savoir Stanford Chinese Segmenter. En ce qui concerne l\u0026rsquo;usage de cet outil, tout est clair sur son site (https://nlp.stanford.edu/software/segmenter.shtml)[https://nlp.stanford.edu/software/segmenter.shtml] \nsh ./stanford-segmenter/segment.sh -k ctb ./DUMP-TEXT/*.txt utf-8 0  ","date":1572994800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572994800,"objectID":"98258f7ceffb451ca7b1d447f01f95c1","permalink":"/blog/5/","publishdate":"2019-11-06T00:00:00+01:00","relpermalink":"/blog/5/","section":"blog","summary":"Désormais, au moment de lancement de notre programme, nous devons mettre 3 arguments. Le premier et le deuxième sont respectivement le répertoire de l\u0026rsquo;input URL et celui de l\u0026rsquo;output tableau. Maintenant, le troisième est nos mots ciblés dans ce projet qui est donc \u0026lsquo;guerre commerciale|trade war|贸易战\u0026rsquo; pour nous. Ce troisième argument sert à compter sa fréquence dans le texte.\n\nLes 4 colonnes rajoutées sont :\n le contexte de mot-clé sa fréquence dans chaque fichier dump l\u0026rsquo;index des mots présents dans chaque fichier dump les bigrammes","tags":null,"title":"Cours 7 - Rajouter 4 colonnes dans la table d'URLs","type":"docs"},{"authors":null,"categories":null,"content":"Lors de la détection de l\u0026rsquo;encodage, pour quelques URLs chinois, nous avons détecté TEXT/HTML comme résultat, ce qui n\u0026rsquo;était pas un type d\u0026rsquo;encodage et évidemment ne pouvait pas être converti en UTF-8 avec iconv. Il nous faut donc reconstruire nos codes selon le processus ci-après :\n\n","date":1572994800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572994800,"objectID":"78d8af5e42305039d3b1e34d571c3031","permalink":"/blog/6/","publishdate":"2019-11-06T00:00:00+01:00","relpermalink":"/blog/6/","section":"blog","summary":"Lors de la détection de l\u0026rsquo;encodage, pour quelques URLs chinois, nous avons détecté TEXT/HTML comme résultat, ce qui n\u0026rsquo;était pas un type d\u0026rsquo;encodage et évidemment ne pouvait pas être converti en UTF-8 avec iconv. Il nous faut donc reconstruire nos codes selon le processus ci-après :","tags":null,"title":"Cours 8 - Résolution du problème d'encodage","type":"docs"},{"authors":null,"categories":null,"content":"Pour la segmentation du corpus chinois, la semaine dernière, nous avons utilisé le stanford-segmenter. Ayant pour but de le comparer avec un module Jieba qui se concentre sur la segmentation du texte chinois, nous avons écrit un script python en important ce dernier module pour réaliser la segmentation. \n\n#!/usr/bin/python # _*_ coding: utf-8 _*_ # segment chinese text # modules import re import sys import jieba # functions def tokenize(file): # input file with open(file, 'r', encoding='utf-8') as f: content = f.read() # clean text and keep only chinese characters pattern=re.compile(u'[^\\u4E00-\\u9FA5]') texte=pattern.sub(r'', content) wordlist_temp=list(jieba.cut(texte, cut_all=False)) wordlist=[i.rstrip() for i in wordlist_temp if len(i)\u0026gt;=1] return wordlist def token_file(file): wordlist=tokenize(sys.argv[1]) # output file with open(file, 'w', encoding='utf-8') as f: f.write(' '.join(wordlist)) if __name__ == \u0026quot;__main__\u0026quot;: token_file(sys.argv[2])  \nIl suffit de taper le nom du fichier contenant des textes chinois comme le premier argument et le nom du fichier de sortie comme le deuxième argument. python3.7 seg_jieba.py ../DUMP-TEXT/1-16.txt test1.txt  \nNous avons ensuite fait un test en prenant un de nos dump textes comme l\u0026rsquo;input avec les segmenteurs Jieba et Stanford-Segmenter. Les résultats sont affichés ci-après. Le résultat de Jieba s\u0026rsquo;affiche en haut tandis que celui de Stanford se trouve en bas.  ","date":1572994800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572994800,"objectID":"2f9425d6b16a5b978d42c59ea483741d","permalink":"/blog/7/","publishdate":"2019-11-06T00:00:00+01:00","relpermalink":"/blog/7/","section":"blog","summary":"Pour la segmentation du corpus chinois, la semaine dernière, nous avons utilisé le stanford-segmenter. Ayant pour but de le comparer avec un module Jieba qui se concentre sur la segmentation du texte chinois, nous avons écrit un script python en important ce dernier module pour réaliser la segmentation. \n\n#!/usr/bin/python # _*_ coding: utf-8 _*_ # segment chinese text # modules import re import sys import jieba # functions def tokenize(file): # input file with open(file, 'r', encoding='utf-8') as f: content = f.","tags":null,"title":"Cours 9 - méthode 2 de de la segmentation du chinois","type":"docs"},{"authors":null,"categories":null,"content":"Pour que notre script final soit plus lisible et claire, nous essayons de remanier notre code en mettant chaque processus dans une fonction. Grâce au blog d\u0026rsquo;un ancien camarade, un exemple auquel on peut faire référence, nous avons pu comprendre le foctionnement des fonctions en bash dans un cas précis et concret. Voici le script principal.  #!/bin/bash # importer les fonctions . /Users/becca/Documents/nlp/coursS1/projetEncadre/PROJET-MOT-SUR-LE-WEB/PROGRAMMES/functions.sh #--------------------Main part-----------------# # on commence par supprimer l'éventuel fichier de résultat que l'on doit reconstruire rm -f \u0026quot;$2/tableau2.html\u0026quot; ; # on récupère les 2 arguments que l'on a passé au programme # le premier : chemin vers le dossier contenant les fichiers d'URL # le second : chemin vers le dossier devant contenir le fichier HTML final echo \u0026quot;Les urls SONT DANS : $1\u0026quot; ; echo \u0026quot;On créé le tableau HTML dans : $2\u0026quot; ; # output=$($2/tableau2.html) ecrireMetaData $2/tableau2.html # Création d'une variable pour compter les fichiers traités et donc le nb de tableau généré numerotableau=1; # Création d'une variable pour stocker notre terme ciblé motif=$3; # Parcours du dossier contenant les fichiers URLs for fichier in $(ls $1) do compteur=1; # compteur destiné à compter les URLs pour chaque fichier d'URL echo \u0026quot;$1/$fichier\u0026quot; ; #----------------------------------------------------------- # Création du tableau associé au fichier en cours de traitement #----------------------------------------------------------- ecrireTitre $2/tableau2.html # \u0026quot;parcours\u0026quot; d'un fichier d'URL : lecture ligne à ligne des URLs for ligne in $(cat \u0026quot;$1/$fichier\u0026quot;) do codeRetour=$(detHttpCode $ligne); if [[ $codeRetour == 200 ]] then encodage=$(detEncodage1 $ligne); curl -L -o \u0026quot;../PAGES-ASPIREES/$numerotableau-$compteur.html\u0026quot; \u0026quot;$ligne\u0026quot;; echo \u0026quot;ENCODAGE DETECTE PAR CURL : $encodage\u0026quot;; if [[ $encodage == \u0026quot;UTF-8\u0026quot; ]] then procUtf8 $2/tableau2.html else # http_code=200, l'encodage n'est pas utf-8 encodage=$(detEncodage2 $ligne) if [[ $encodage == \u0026quot;UTF-8\u0026quot; ]] then procUtf8 $2/tableau2.html else code=$(iconv -l|egrep -i $encodage) if [[ $code=true ]] then iconv -f $encodage -t 'utf-8' ../DUMP-TEXT/$numerotableau-$compteur.txt \u0026gt; ../DUMP-TEXT/$numerotableau-$compteur-converti.txt else procVide $2/tableau2.html fi fi fi else procVide $2/tableau2.html fi compteur=$((compteur+1)) ; done echo \u0026quot;\u0026lt;/table\u0026gt;\u0026lt;br /\u0026gt;\u0026quot; \u0026gt;\u0026gt; $2/tableau2.html ; # on incrémente le compteur de tableaux numerotableau=$((numerotableau+1)); done echo \u0026quot;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026quot; \u0026gt;\u0026gt; $2/tableau2.html ;  \n## functions # 1 html head ecrireMetaData(){ echo \u0026quot;\u0026lt;!DOCTYPE html\u0026gt;\u0026quot; \u0026gt; $1 echo \u0026quot;\u0026lt;html lang=\\\u0026quot;en\\\u0026quot;\u0026gt;\u0026quot; \u0026gt;\u0026gt; $1 echo \u0026quot;\u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\u0026lt;title\u0026gt;Projet Encadre\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u0026quot; \u0026gt;\u0026gt; $1 echo \u0026quot;\u0026lt;body\u0026gt;\u0026quot; \u0026gt;\u0026gt; $1 } # 2 table title ecrireTitre(){ echo \u0026quot;\u0026lt;table border=\\\u0026quot;2\\\u0026quot; align=\\\u0026quot;center\\\u0026quot; width=\\\u0026quot;80%\\\u0026quot;\u0026gt;\u0026quot; \u0026gt;\u0026gt; $1 echo \u0026quot;\u0026lt;tr bgcolor=\\\u0026quot;grey\\\u0026quot;\u0026gt;\u0026lt;td\u0026gt;N°\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;URL\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Code http\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;encodage\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Page aspirée\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Dump\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Filtrage Txt\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Filtrage Html\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Index\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Bitexte\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;Fq Motif\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; $1 } # 3 get http_code detHttpCode(){ curl -SIL -o toto -w \u0026quot;%{http_code}\u0026quot; $1 } # 4 two ways to get encoding detEncodage1(){ curl -sIL -o toto -w %{content_type} $1 | cut -f2 -d\u0026quot;=\u0026quot; | tr '[a-z]' '[A-Z]' | tr -d '\\r' } detEncodage2(){ egrep -oi 'charset=\u0026quot;?[^\u0026quot;,]+\u0026quot;?' $1 | cut -f2 -d\u0026quot;=\u0026quot; | tr '[a-z]' '[A-Z]' | tr -d '\\r'| head -1 } # 5 process text when encoding is utf-8 procUtf8(){ # 1. On lynx la page aspirée lynx -dump -nolist -assume_charset=$encodage -display_charset=$encodage \u0026quot;../PAGES-ASPIREES/$numerotableau-$compteur.html\u0026quot; \u0026gt; ../DUMP-TEXT/$numerotableau-$compteur.txt; #----------------------------------------------------------- # 2. On cree le fichier contexte TXT via egrep egrep -i -C2 \u0026quot;$motif\u0026quot; ../DUMP-TEXT/$numerotableau-$compteur.txt \u0026gt; ../CONTEXTE/$numerotableau-$compteur.txt; #----------------------------------------------------------- # 3. Fq motif nbmotif=$(egrep -coi \u0026quot;$motif\u0026quot; ../DUMP-TEXT/$numerotableau-$compteur.txt;); #----------------------------------------------------------- # 4. contexte html ../minigrep/minigrepmultilingue.pl \u0026quot;utf-8\u0026quot; ../DUMP-TEXT/$numerotableau-$compteur.txt ../minigrep/motif-regexp.txt ; mv resultat-extraction.html ../CONTEXTES/$numerotableau-$compteur.html ; #----------------------------------------------------------- # 5. index hierarchique egrep -o \u0026quot;\\w+\u0026quot; ../DUMP-TEXT/$numerotableau-$compteur.txt | sort | uniq -c | sort -r \u0026gt; ../DUMP-TEXT/index-$numerotableau-$compteur.txt ; #----------------------------------------------------------- # 6. bigramme egrep -o \u0026quot;\\w+\u0026quot; ../DUMP-TEXT/$numerotableau-$compteur.txt \u0026gt; bi1.txt; tail -n +2 bi1.txt \u0026gt; bi2.txt ; paste bi1.txt bi2.txt \u0026gt; bi3.txt ; cat bi3.txt | sort | uniq -c | sort -r \u0026gt; ../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt ; #----------------------------------------------------------- # 7. on écrit les résultats dans le tableau avec tous les résultats produits echo \u0026quot;\u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;$compteur\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;$ligne\\\u0026quot; target=\\\u0026quot;_blank\\\u0026quot;\u0026gt;$ligne\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Code_http:$codeRetour\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Encodage:$encodage\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../PAGES-ASPIREES/$numerotableau-$compteur.html\\\u0026quot;\u0026gt;$numerotableau-$compteur.html\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../DUMP-TEXT/$numerotableau-$compteur.txt\\\u0026quot;\u0026gt;$numerotableau-$compteur.txt\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../CONTEXTES/$numerotableau-$compteur.txt\\\u0026quot;\u0026gt;$numerotableau-$compteur.txt\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../CONTEXTES/$numerotableau-$compteur.html\\\u0026quot;\u0026gt;$numerotableau-$compteur.html\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../DUMP-TEXT/index-$numerotableau-$compteur.txt\\\u0026quot;\u0026gt;index-$numerotableau-$compteur\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../DUMP-TEXT/bigramme-$numerotableau-$compteur.txt\\\u0026quot;\u0026gt;bigramme-$numerotableau-$compteur\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;$nbmotif\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$1\u0026quot; } # 6 write \u0026quot;-\u0026quot; in table procVide(){ echo \u0026quot;\u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;$compteur\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;$ligne\\\u0026quot; target=\\\u0026quot;_blank\\\u0026quot;\u0026gt;$ligne\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Code_http:$codeRetour\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Encodage:$encodage\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\\\u0026quot;../PAGES-ASPIREES/$numerotableau-$compteur.html\\\u0026quot;\u0026gt;$numerotableau-$compteur.html\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;td\u0026gt;-\u0026lt;/td\u0026gt;\u0026lt;/tr\u0026gt;\u0026quot; \u0026gt;\u0026gt; \u0026quot;$1\u0026quot; }  ","date":1572994800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572994800,"objectID":"5617278c3fe29604092202990dbc88fd","permalink":"/blog/8/","publishdate":"2019-11-06T00:00:00+01:00","relpermalink":"/blog/8/","section":"blog","summary":"Pour que notre script final soit plus lisible et claire, nous essayons de remanier notre code en mettant chaque processus dans une fonction. Grâce au blog d\u0026rsquo;un ancien camarade, un exemple auquel on peut faire référence, nous avons pu comprendre le foctionnement des fonctions en bash dans un cas précis et concret. Voici le script principal.  #!/bin/bash # importer les fonctions . /Users/becca/Documents/nlp/coursS1/projetEncadre/PROJET-MOT-SUR-LE-WEB/PROGRAMMES/functions.sh #--------------------Main part-----------------# # on commence par supprimer l'éventuel fichier de résultat que l'on doit reconstruire rm -f \u0026quot;$2/tableau2.","tags":null,"title":"Cours 10 - Reconstruction du code (Refactoring)","type":"docs"},{"authors":null,"categories":null,"content":"","date":1572994800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572994800,"objectID":"6166753c0df10444161a82670b166dd7","permalink":"/blog/9/","publishdate":"2019-11-06T00:00:00+01:00","relpermalink":"/blog/9/","section":"blog","summary":"","tags":null,"title":"Cours 11 - Analyse du corpus sur iTrameur","type":"docs"},{"authors":null,"categories":null,"content":"The Best Way to Create the Website You Want from Markdown (or Jupyter/RStudio)\nBuild Anything with Widgets\nStar -- ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4269afda0cf8ad53d79f53f7a419c023","permalink":"/backup/hero/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/hero/","section":"backup","summary":"The Best Way to Create the Website You Want from Markdown (or Jupyter/RStudio)\nBuild Anything with Widgets\nStar -- ","tags":null,"title":"Academic","type":"backup"},{"authors":null,"categories":null,"content":"Welcome to the personal demo of Academic. Other demos available include:\n Project Demo (Academic\u0026rsquo;s actual site)  Over 100,000 Amazing Websites have Already Been Built with Academic\nJoin the Most Empowered Hugo Community\n This homepage section is an example of adding elements to the Blank widget.\nBackgrounds can be applied to any section. Here, the background option is set give an image parallax effect.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6133707dfcdacbdc49c66dd03cf555e8","permalink":"/backup/demo/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/demo/","section":"backup","summary":"Welcome to the personal demo of Academic. Other demos available include:\n Project Demo (Academic\u0026rsquo;s actual site)  Over 100,000 Amazing Websites have Already Been Built with Academic\nJoin the Most Empowered Hugo Community\n This homepage section is an example of adding elements to the Blank widget.\nBackgrounds can be applied to any section. Here, the background option is set give an image parallax effect.\n  ","tags":null,"title":"Demos","type":"backup"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9c1ce04ade97ede3697f8d12ae01435c","permalink":"/backup/accomplishments/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/accomplishments/","section":"backup","summary":"","tags":null,"title":"Accomplish\u0026shy;ments","type":"backup"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"2bd7bf8bfaf8e8ad46820361005def37","permalink":"/backup/projects/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/projects/","section":"backup","summary":"","tags":null,"title":"Projects","type":"backup"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"fcff0ce3a7d7b7823d5550898ebeefde","permalink":"/backup/people/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/people/","section":"backup","summary":"","tags":null,"title":"Meet the Team","type":"backup"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"40c7372ee82a8c9058ed2016ca4e33db","permalink":"/backup/talks/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/talks/","section":"backup","summary":"","tags":null,"title":"Recent \u0026 Upcoming Talks","type":"backup"},{"authors":null,"categories":null,"content":" Quickly discover relevant content by filtering publications.   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b24a1a2368ad62eda18c65895f1210ac","permalink":"/backup/publications/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/backup/publications/","section":"backup","summary":" Quickly discover relevant content by filtering publications.   ","tags":null,"title":"Recent Publications","type":"backup"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Xiaoou WANG","Xingyu LIU"],"categories":null,"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.","tags":null,"title":"Nous nous sommes penchés sur la représentation de la guerre commerciale sur la toile des pays anglophones, de la Chine, et de la France.","type":"publication"},{"authors":null,"categories":null,"content":" table example pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.txt cat test.txt # visualiser le contenu d'un fichier echo \u0026quot;# montrer les metadonnes du contenu\u0026quot; wc test.txt # la commande egale wc -mlw, m = caractere l = ligne, w = mots  /Users/becca/Downloads/siteProjetEncadre/content/frontend # exemple de l'arborescence de la racine sous Mac Applications Developer Incompatible Software Library Network System Users Volumes anaconda3 bin cores dev etc home installer.failurerequests net opt private sbin tmp usr var # sortie de la commande cat Bonjour # montrer les metadonnes du contenu 1 1 8 test.txt     Syntax Description     Header Title   Paragraph Text    R You can embed an R code chunk like this:\nsummary(cars)   speed dist Min. : 4.0 Min. : 2.00 1st Qu.:12.0 1st Qu.: 26.00 Median :15.0 Median : 36.00 Mean :15.4 Mean : 42.98 3rd Qu.:19.0 3rd Qu.: 56.00 Max. :25.0 Max. :120.00  fit \u0026lt;- lm(dist ~ speed, data = cars) fit   Call: lm(formula = dist ~ speed, data = cars) Coefficients: (Intercept) speed -17.579 3.932  par(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'), col = c('#0292D8', '#F7EA39', '#C4B632'), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.\n ","date":1576882800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576882800,"objectID":"2efcf4dfe56408781c72dfef52f510f2","permalink":"/frontend/1/","publishdate":"2019-12-21T00:00:00+01:00","relpermalink":"/frontend/1/","section":"frontend","summary":"table example pwd # print repertoire actuel cd .. # remonte au repertoire parent cd / # aller a la racine echo \u0026quot;# exemple de l'arborescence de la racine sous Mac\u0026quot; ls # exemple de l'arborescence de la racine sous Mac cd ~ # aller a home echo \u0026quot;# sortie de la commande cat\u0026quot; echo \u0026quot;Bonjour\u0026quot; \u0026gt; test.txt cat test.txt # visualiser le contenu d'un fichier echo \u0026quot;# montrer les metadonnes du contenu\u0026quot; wc test.","tags":null,"title":"1 article","type":"docs"},{"authors":null,"categories":null,"content":" Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma{n} = \\frac{ \\left | \\left (\\mathbf x{n} - \\mathbf x{n-1} \\right )^T \\left [\\nabla F (\\mathbf x{n}) - \\nabla F (\\mathbf x{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^) = \\begin{cases} p_0^ \u0026amp; \\text{if }k=1, 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\nWrite math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Did you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["admin"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":" Create slides in Markdown with Academic Academic | Documentation\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":null,"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["admin"],"categories":null,"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n 👉 Get Started 📚 View the documentation 💬 Ask a question on the forum 👥 Chat with the community 🐦 Twitter: @source_themes @GeorgeCushen #MadeWithAcademic 💡 Request a feature or report a bug ⬆️ Updating? View the Update Guide and Release Notes ❤ Support development of Academic:  ☕️ Donate a coffee 💵 Become a backer on Patreon 🖼️ Decorate your laptop or journal with an Academic sticker 👕 Wear the T-shirt 👩‍💻 Contribute      Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.   Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Academic comes with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nEcosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":null,"title":"Academic: the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":" Table des matières HAHAHUGOSHORTCODE-TOC0-HBHB R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"Table des matières HAHAHUGOSHORTCODE-TOC0-HBHB R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.","tags":["R"],"title":"Hello R Markdown","type":"post"}]